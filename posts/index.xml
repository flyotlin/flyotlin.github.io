<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Posts on flyotlin's Blog</title><link>https://flyotlin.github.io/posts/</link><description>Recent content in Posts on flyotlin's Blog</description><generator>Hugo -- 0.143.1</generator><language>en-us</language><lastBuildDate>Fri, 14 Feb 2025 16:26:28 +0800</lastBuildDate><atom:link href="https://flyotlin.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Leetcode 8 &amp; 9</title><link>https://flyotlin.github.io/posts/leetcode-8--9/</link><pubDate>Fri, 14 Feb 2025 16:26:28 +0800</pubDate><guid>https://flyotlin.github.io/posts/leetcode-8--9/</guid><description>&lt;p>這兩題都算滿簡單的，所以放在一起講。&lt;/p>
&lt;p>&lt;a href="https://leetcode.com/problems/string-to-integer-atoi">https://leetcode.com/problems/string-to-integer-atoi&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://leetcode.com/problems/palindrome-number/">https://leetcode.com/problems/palindrome-number/&lt;/a>&lt;/p>
&lt;h2 id="solution">Solution&lt;/h2>
&lt;h3 id="leetcode-8--string-to-integer-atoi">Leetcode 8 — string to integer atoi&lt;/h3>
&lt;p>這題只有一些邊界問題要討論，其實挺簡單的。&lt;/p>
&lt;p>邊界問題是 integer (int) 是否會 overflow，跟昨天的 Leetcode 7 有點像。&lt;/p></description></item><item><title>Leetcode 3 — Longest Substring Without Repeating Characters</title><link>https://flyotlin.github.io/posts/leetcode-3--longest-substring-without-repeating-characters/</link><pubDate>Fri, 14 Feb 2025 16:25:27 +0800</pubDate><guid>https://flyotlin.github.io/posts/leetcode-3--longest-substring-without-repeating-characters/</guid><description>&lt;p>&lt;a href="https://leetcode.com/problems/longest-substring-without-repeating-characters">https://leetcode.com/problems/longest-substring-without-repeating-characters&lt;/a>&lt;/p>
&lt;h1 id="solution">Solution&lt;/h1>
&lt;p>使用 sliding window + set 就能解決這個問題，只是一開始被前幾天解的 dp 題 (找「最長回文子字串 longest palandromic substring」) 擾亂思緒，往列舉出所有長度的子字串，再一個個的檢查是否 valid 的方向思考。&lt;/p></description></item><item><title>Leetcode 11 — Container With Most Water</title><link>https://flyotlin.github.io/posts/leetcode-11--container-with-most-water/</link><pubDate>Fri, 14 Feb 2025 16:07:01 +0800</pubDate><guid>https://flyotlin.github.io/posts/leetcode-11--container-with-most-water/</guid><description>&lt;p>最近開始刷題，先從基本的 data structure 開始複習。策略是主題式的複習，這幾天的目標是 array、linked list 之類的資料結構，因此從 leetcode array 類別中選到了這一題。&lt;/p></description></item><item><title>影評 - 我獨自升級</title><link>https://flyotlin.github.io/posts/%E6%88%91%E7%8D%A8%E8%87%AA%E5%8D%87%E7%B4%9A/</link><pubDate>Fri, 14 Feb 2025 15:31:00 +0800</pubDate><guid>https://flyotlin.github.io/posts/%E6%88%91%E7%8D%A8%E8%87%AA%E5%8D%87%E7%B4%9A/</guid><description>&lt;h2 id="劇情簡介">劇情簡介&lt;/h2>
&lt;p>某個虛構世界中某天突然出現了可以連結現實世界與異次元空間的傳送門，傳送門中充斥著各種魔獸。為了避免7天後封印解除，獵人們需要進入傳送門將魔獸清除。&lt;/p></description></item><item><title>梵蒂岡驅魔士</title><link>https://flyotlin.github.io/posts/%E6%A2%B5%E8%92%82%E5%B2%A1%E9%A9%85%E9%AD%94%E5%A3%AB/</link><pubDate>Wed, 26 Jul 2023 02:09:10 +0800</pubDate><guid>https://flyotlin.github.io/posts/%E6%A2%B5%E8%92%82%E5%B2%A1%E9%A9%85%E9%AD%94%E5%A3%AB/</guid><description>&lt;p>會想要看這部主因是新竹城隍廟附近的二輪戲院（新復珍戲院）最近上映的電影中，這部是我比較有興趣的。除了以天主教、梵蒂岡、驅魔為題材外，主演教廷驅魔士的羅素克洛也是吸引我的其中一點。&lt;/p></description></item><item><title>Bash Script 的好習慣</title><link>https://flyotlin.github.io/posts/bash-script-shell-script-%E7%9A%84%E5%A5%BD%E7%BF%92%E6%85%A3/</link><pubDate>Sun, 16 Jul 2023 21:32:03 +0800</pubDate><guid>https://flyotlin.github.io/posts/bash-script-shell-script-%E7%9A%84%E5%A5%BD%E7%BF%92%E6%85%A3/</guid><description>&lt;p>bash script 前面沒有特別設定的話，執行時遇到錯誤，通常會繼續往下執行，而不會像平常熟悉的程式語言遇到 exception 時（沒有 error handling）直接跳出結束執行。&lt;/p>
&lt;p>另外，在開發、撰寫 bash script 時，也時常有需要 debug 的時候。&lt;/p></description></item><item><title>關於中央宿網的這檔事</title><link>https://flyotlin.github.io/posts/%E9%97%9C%E6%96%BC%E4%B8%AD%E5%A4%AE%E5%AE%BF%E7%B6%B2%E7%9A%84%E9%80%99%E6%AA%94%E4%BA%8B/</link><pubDate>Sat, 21 May 2022 17:34:06 +0800</pubDate><guid>https://flyotlin.github.io/posts/%E9%97%9C%E6%96%BC%E4%B8%AD%E5%A4%AE%E5%AE%BF%E7%B6%B2%E7%9A%84%E9%80%99%E6%AA%94%E4%BA%8B/</guid><description>&lt;p>從大一到大三，一直都很好奇宿舍網路的註冊及運作機制。但每次開通成功後，想要繼續深究的動力就直接消失。&lt;/p>
&lt;p>這次剛好在註冊、開通的過程遇到了些問題，就順手分享除錯過程，以及我對整個宿網運作機制的猜測及理解。&lt;/p></description></item><item><title>在 M1 Mac 上啟動 PHP Laradock</title><link>https://flyotlin.github.io/posts/%E5%9C%A8-m1-mac-%E4%B8%8A%E5%95%9F%E5%8B%95-php-laradock/</link><pubDate>Sun, 15 May 2022 17:01:22 +0800</pubDate><guid>https://flyotlin.github.io/posts/%E5%9C%A8-m1-mac-%E4%B8%8A%E5%95%9F%E5%8B%95-php-laradock/</guid><description>&lt;p>校內工讀的伺服器上部署了 3-4 個不同的網站，好在當初有使用 PHP 的容器化解決方案 - Laradock，能夠以容器化的方式使用多個服務。&lt;/p>
&lt;p>這次遇到的問題是 MySQL 對 arm64 (M1 Mac) 的支援度並不好，再加上沒有將前一次 Laradock 啟動後產生的 MySQL 檔案清乾淨，導致 local 啟動時踩了不少坑。&lt;/p></description></item><item><title>10537 - The Toll! Revisited</title><link>https://flyotlin.github.io/posts/10537---the-toll-revisited/</link><pubDate>Fri, 18 Dec 2020 17:01:22 +0800</pubDate><guid>https://flyotlin.github.io/posts/10537---the-toll-revisited/</guid><description>&lt;h2 id="解題想法">解題想法&lt;/h2>
&lt;p>這題用的演算法主要是dijkstra，求權重圖的最短路徑，但不能有負邊。&lt;/p>
&lt;p>由於題目給的是到終點時的貨物數量，要我們求起點出發要有多少貨物。
所以在這邊我們選擇從終點反向計算到各點的single-source shortest path。最後輸出終點到起點的shortest path。&lt;/p></description></item><item><title>Uva 10039 - Railroads</title><link>https://flyotlin.github.io/posts/uva-10039---railroads/</link><pubDate>Tue, 01 Dec 2020 17:01:22 +0800</pubDate><guid>https://flyotlin.github.io/posts/uva-10039---railroads/</guid><description>&lt;h2 id="題目敘述">題目敘述&lt;/h2>
&lt;p>這題輸入滿複雜的，分為三個部分，會先輸入有幾組測資。&lt;/p>
&lt;ul>
&lt;li>PART 1:
城市名稱&lt;/li>
&lt;li>PART 2:
列車資訊&lt;/li>
&lt;li>PART 3:
出發時間 出發城市 抵達城市
&lt;!-- raw HTML omitted -->
&lt;/li>
&lt;/ul>
&lt;h2 id="解題想法">解題想法&lt;/h2>
&lt;p>這題第一眼看到以為是dfs+圖論，但後來看了別人的解法後才發現是dp。&lt;/p></description></item><item><title>Uva 10131 - Is Bigger Smarter?</title><link>https://flyotlin.github.io/posts/uva-10131---is-bigger-smarter/</link><pubDate>Wed, 25 Nov 2020 17:01:22 +0800</pubDate><guid>https://flyotlin.github.io/posts/uva-10131---is-bigger-smarter/</guid><description>&lt;h2 id="題目">題目&lt;/h2>
&lt;p>題目給大象的體重及智商，求體重&lt;strong>嚴格&lt;/strong>遞增，智商&lt;strong>嚴格&lt;/strong>遞減的最長子集合(subset)。&lt;/p>
&lt;h2 id="解題想法">解題想法&lt;/h2>
&lt;p>我們可以先將體重由小到大排序(也可以智商由大到小排序，後面就反著做)，再對智商做LDS。但要注意體重跟智商的值有可能相等，所以在對智商做LDS的時候，也要注意體重沒有取到相等的值。&lt;/p></description></item><item><title>Uva 10154 - Weights and Measures</title><link>https://flyotlin.github.io/posts/uva-10154---weights-and-measures/</link><pubDate>Wed, 18 Nov 2020 17:01:22 +0800</pubDate><guid>https://flyotlin.github.io/posts/uva-10154---weights-and-measures/</guid><description>&lt;h2 id="解題想法">解題想法&lt;/h2>
&lt;p>先按照烏龜的力量由小到大排序。&lt;/p>
&lt;p>再依序檢查每隻烏龜，從塔的下方試試看，如果他的力量夠大，且重量比原本的輕就放進去。&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>dp[i]: 儲存第i層烏龜塔所承受的總重量&lt;/strong>&lt;/p></description></item><item><title>Uva 674 - Coin Change</title><link>https://flyotlin.github.io/posts/uva-674---coin-change/</link><pubDate>Mon, 16 Nov 2020 17:01:22 +0800</pubDate><guid>https://flyotlin.github.io/posts/uva-674---coin-change/</guid><description>&lt;h2 id="解題想法">解題想法&lt;/h2>
&lt;p>題目要問的是給定一個金額，請問用{1, 5, 10, 25, 50}來湊的話，共有幾種不同的湊法。&lt;/p>
&lt;p>這題其實就是無限背包問題，所以會用到動態規劃的概念。只是把背包的限制重量變成題目欲湊出的金額。物品變成面額。
然後面額的數量沒有限制，隨你喜歡用多少就用多少。&lt;/p></description></item><item><title>組合語言筆記-2</title><link>https://flyotlin.github.io/posts/%E7%B5%84%E5%90%88%E8%AA%9E%E8%A8%802/</link><pubDate>Sun, 18 Oct 2020 17:01:22 +0800</pubDate><guid>https://flyotlin.github.io/posts/%E7%B5%84%E5%90%88%E8%AA%9E%E8%A8%802/</guid><description>&lt;h1 id="loop">Loop&lt;/h1>
&lt;p>用ECX作為counter，下面的範例code會loop 5次&lt;/p>
&lt;pre tabindex="0">&lt;code> mov ecx, 5
L:
; do something
loop L
&lt;/code>&lt;/pre>&lt;h1 id="flags">FLAGS&lt;/h1>
&lt;p>ALU中有這些FLAG，反映算術運算後的結果&lt;/p>
&lt;ul>
&lt;li>Sign Flag: 當結果變成負數&lt;/li>
&lt;li>Carry Flag: 當unsigned numbers超出範圍&lt;/li>
&lt;li>Zero Flag: 當結果變成0&lt;/li>
&lt;li>Overflow Flag: 當signed numbers超出範圍&lt;/li>
&lt;/ul>
&lt;h1 id="esisource-index">ESI(Source Index)&lt;/h1>
&lt;p>[esi] : dereference該位址的值&lt;/p></description></item><item><title>Uva 10157 - Expressions</title><link>https://flyotlin.github.io/posts/uva-10157---expressions/</link><pubDate>Sun, 04 Oct 2020 17:01:22 +0800</pubDate><guid>https://flyotlin.github.io/posts/uva-10157---expressions/</guid><description>&lt;h1 id="catalan-number">Catalan Number&lt;/h1>
&lt;p>&lt;a href="https://zh.wikipedia.org/wiki/%E5%8D%A1%E5%A1%94%E5%85%B0%E6%95%B0">https://zh.wikipedia.org/wiki/%E5%8D%A1%E5%A1%94%E5%85%B0%E6%95%B0&lt;/a>
&lt;a href="https://blog.csdn.net/u011489043/article/details/77884434">https://blog.csdn.net/u011489043/article/details/77884434&lt;/a>&lt;/p>
&lt;ol>
&lt;li>(0, 0) &amp;mdash;&amp;gt; (n, n)&lt;/li>
&lt;li>矩陣相乘，結合律&lt;/li>
&lt;li>括號總數&lt;/li>
&lt;/ol>
&lt;h1 id="神秘的解題公式">神秘的解題公式&lt;/h1>
&lt;p>&lt;a href="https://www.twblogs.net/a/5baaee952b7177781a0eb263/">https://www.twblogs.net/a/5baaee952b7177781a0eb263/&lt;/a>&lt;/p>
&lt;p>dp(k, d): k對括號，深度&lt;strong>不超過&lt;/strong>d的方法數&lt;/p>
&lt;p>dp(k, d)算法:&lt;/p>
&lt;blockquote>
&lt;p>dp(k, d) += summation(dp(i, d-1) * dp(k-1 - i, d)), i from 0 to k-1&lt;/p>&lt;/blockquote>
&lt;p>上面summation內的dp只有k-1個括號，所以表達形式如下:&lt;/p></description></item><item><title>暫存器如何儲存字串及字元?</title><link>https://flyotlin.github.io/posts/%E6%9A%AB%E5%AD%98%E5%99%A8%E5%A6%82%E4%BD%95%E5%84%B2%E5%AD%98%E5%AD%97%E4%B8%B2%E5%8F%8A%E5%AD%97%E5%85%83/</link><pubDate>Sat, 03 Oct 2020 17:01:22 +0800</pubDate><guid>https://flyotlin.github.io/posts/%E6%9A%AB%E5%AD%98%E5%99%A8%E5%A6%82%E4%BD%95%E5%84%B2%E5%AD%98%E5%AD%97%E4%B8%B2%E5%8F%8A%E5%AD%97%E5%85%83/</guid><description>&lt;h1 id="前言">前言&lt;/h1>
&lt;p>在上組合語言的時候，有個作業原本是要把一個變數初始化為十六進位的eeea，但眼殘如我不小心看成是要初始化為一個字串eeea。於是我稍微去理解了一下究竟在register以及memory中是如何儲存字串及字元的，也是因為這樣才誕生了這篇文章。&lt;/p></description></item><item><title>組合語言筆記-1</title><link>https://flyotlin.github.io/posts/%E7%B5%84%E5%90%88%E8%AA%9E%E8%A8%801/</link><pubDate>Fri, 02 Oct 2020 17:01:22 +0800</pubDate><guid>https://flyotlin.github.io/posts/%E7%B5%84%E5%90%88%E8%AA%9E%E8%A8%801/</guid><description>&lt;p>大二上的組合語言學的是windows assembly，組譯器(assembler)為MASM。之後這系列的文章會用筆記的形式記錄一下組語大概學了些什麼東西。&lt;/p></description></item><item><title>JOJO的奇幻冒險 黃金之風 影評</title><link>https://flyotlin.github.io/posts/jojo%E7%9A%84%E5%A5%87%E5%B9%BB%E5%86%92%E9%9A%AA-%E9%BB%83%E9%87%91%E4%B9%8B%E9%A2%A8-%E5%BD%B1%E8%A9%95/</link><pubDate>Thu, 17 Sep 2020 17:01:22 +0800</pubDate><guid>https://flyotlin.github.io/posts/jojo%E7%9A%84%E5%A5%87%E5%B9%BB%E5%86%92%E9%9A%AA-%E9%BB%83%E9%87%91%E4%B9%8B%E9%A2%A8-%E5%BD%B1%E8%A9%95/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>這部真的超好看的!總共有39集，其中有3個總集篇，可以選擇跳過。
我是在巴哈動畫瘋上觀看的，希望大家可以多多支持國內的正版平台。打開彈幕配上劇情也別有一番趣味~&lt;/p></description></item><item><title>Xrandr — Linux螢幕方向設定教學</title><link>https://flyotlin.github.io/posts/xrandr--linux%E8%9E%A2%E5%B9%95%E6%96%B9%E5%90%91%E8%A8%AD%E5%AE%9A%E6%95%99%E5%AD%B8/</link><pubDate>Sun, 13 Sep 2020 17:01:22 +0800</pubDate><guid>https://flyotlin.github.io/posts/xrandr--linux%E8%9E%A2%E5%B9%95%E6%96%B9%E5%90%91%E8%A8%AD%E5%AE%9A%E6%95%99%E5%AD%B8/</guid><description>&lt;p>不知道大家有沒有過打開ubuntu之後，發現整個螢幕的顯示方向從原本的水平變成垂直，或者是方向整個不對的經驗。像是下面這樣…&lt;/p>
&lt;p>&lt;img alt="fdfd" loading="lazy" src="https://i.imgur.com/aKI7tGO.png">&lt;/p>
&lt;p>在查過一些網路上的資料之後，這個原因或許是因為筆電裡面內建的陀螺儀在搞鬼。&lt;/p></description></item><item><title>Uva 455 - Periodic Strings</title><link>https://flyotlin.github.io/posts/uva-455---periodic-strings/</link><pubDate>Thu, 06 Feb 2020 17:01:22 +0800</pubDate><guid>https://flyotlin.github.io/posts/uva-455---periodic-strings/</guid><description>&lt;p>題目連結: &lt;a href="https://onlinejudge.org/index.php?option=onlinejudge&amp;amp;page=show_problem&amp;amp;problem=396">Uva455&lt;/a>&lt;/p>
&lt;h2 id="解題想法">解題想法&lt;/h2>
&lt;h3 id="輸入">輸入&lt;/h3>
&lt;p>第一行是1個整數n，代表有幾組測資。接下來每組測資都包含兩行，分別是&lt;strong>空白行&lt;/strong>以及&lt;strong>一個字串&lt;/strong>(最多80個字元)。&lt;/p>
&lt;h3 id="solve">Solve&lt;/h3>
&lt;p>題目要我們找出字串的&lt;strong>最小週期&lt;/strong>&lt;/p></description></item><item><title>Uva 100 - The 3n + 1 Problem</title><link>https://flyotlin.github.io/posts/uva-100---the-3n-+-1-problem/</link><pubDate>Wed, 05 Feb 2020 17:01:22 +0800</pubDate><guid>https://flyotlin.github.io/posts/uva-100---the-3n-+-1-problem/</guid><description>&lt;h2 id="題目">題目&lt;/h2>
&lt;p>&lt;a href="https://onlinejudge.org/index.php?option=com_onlinejudge&amp;amp;Itemid=8&amp;amp;page=show_problem&amp;amp;problem=36">Uva 100- The 3n+1 problem&lt;/a>&lt;/p>
&lt;pre tabindex="0">&lt;code>f(n) = 3n+1 , n為奇數 – (1)
= n/2 , n為偶數 – (2)
&lt;/code>&lt;/pre>&lt;p>簡而言之，題目會input兩個數字(a, b)，藉由f(n)的運算，請你輸出依照input順序輸出a b，&lt;/p></description></item><item><title>Uva 10633 - Rare Easy Problem</title><link>https://flyotlin.github.io/posts/uva-10633---rare-easy-problem/</link><pubDate>Tue, 04 Feb 2020 17:01:22 +0800</pubDate><guid>https://flyotlin.github.io/posts/uva-10633---rare-easy-problem/</guid><description>&lt;p>題目連結: &lt;a href="https://onlinejudge.org/index.php?option=onlinejudge&amp;amp;page=show_problem&amp;amp;problem=1574">Uva10633&lt;/a>&lt;/p>
&lt;h2 id="解題想法">解題想法&lt;/h2>
&lt;p>N, M&lt;/p>
&lt;p>其中M為N除去最小位數&lt;/p>
&lt;p>用數學式表達即 M = ( N - (N%10) ) / 10&lt;/p>
&lt;p>題目Input: N-M&lt;/p>
&lt;p>希望Output:所有可能的N&lt;/p>
&lt;p>首先從數學式著手 M = ( N - (N%10) ) / 10&lt;/p></description></item></channel></rss>