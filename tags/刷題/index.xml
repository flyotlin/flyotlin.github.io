<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>刷題 on flyotlin's Blog</title><link>https://flyotlin.github.io/tags/%E5%88%B7%E9%A1%8C/</link><description>Recent content in 刷題 on flyotlin's Blog</description><generator>Hugo -- 0.143.1</generator><language>en-us</language><lastBuildDate>Fri, 14 Feb 2025 16:26:28 +0800</lastBuildDate><atom:link href="https://flyotlin.github.io/tags/%E5%88%B7%E9%A1%8C/index.xml" rel="self" type="application/rss+xml"/><item><title>Leetcode 8 &amp; 9</title><link>https://flyotlin.github.io/posts/leetcode-8--9/</link><pubDate>Fri, 14 Feb 2025 16:26:28 +0800</pubDate><guid>https://flyotlin.github.io/posts/leetcode-8--9/</guid><description>&lt;p>這兩題都算滿簡單的，所以放在一起講。&lt;/p>
&lt;p>&lt;a href="https://leetcode.com/problems/string-to-integer-atoi">https://leetcode.com/problems/string-to-integer-atoi&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://leetcode.com/problems/palindrome-number/">https://leetcode.com/problems/palindrome-number/&lt;/a>&lt;/p>
&lt;h2 id="solution">Solution&lt;/h2>
&lt;h3 id="leetcode-8--string-to-integer-atoi">Leetcode 8 — string to integer atoi&lt;/h3>
&lt;p>這題只有一些邊界問題要討論，其實挺簡單的。&lt;/p>
&lt;p>邊界問題是 integer (int) 是否會 overflow，跟昨天的 Leetcode 7 有點像。&lt;/p></description></item><item><title>Leetcode 7 — Reverse Integer</title><link>https://flyotlin.github.io/posts/leetcode-7--reverse-integer/</link><pubDate>Fri, 14 Feb 2025 16:26:11 +0800</pubDate><guid>https://flyotlin.github.io/posts/leetcode-7--reverse-integer/</guid><description>&lt;p>很簡單的一個題目，唯一要注意的點是怎麼判斷 int overflow。&lt;/p>
&lt;p>&lt;a href="https://leetcode.com/problems/reverse-integer">https://leetcode.com/problems/reverse-integer&lt;/a>
Solution&lt;/p>
&lt;p>定義 n 為原本的數字。做法是用 % 取餘數，取得 n 的最小位數。接著再 n/10，持續這件事直到 n 為 0。&lt;/p></description></item><item><title>Leetcode 6 — Zigzag Conversion</title><link>https://flyotlin.github.io/posts/leetcode-6--zigzag-conversion/</link><pubDate>Fri, 14 Feb 2025 16:25:38 +0800</pubDate><guid>https://flyotlin.github.io/posts/leetcode-6--zigzag-conversion/</guid><description>&lt;p>想維持解題的規律跟手感，但最近實驗室還是會有些雜事 block 住，只能寫多少算多少了。&lt;/p>
&lt;p>目前還沒很進入找工作的狀態，可能是還有碩論跟雜事要忙，沒辦法全神貫注地投入。&lt;/p></description></item><item><title>Leetcode 3 — Longest Substring Without Repeating Characters</title><link>https://flyotlin.github.io/posts/leetcode-3--longest-substring-without-repeating-characters/</link><pubDate>Fri, 14 Feb 2025 16:25:27 +0800</pubDate><guid>https://flyotlin.github.io/posts/leetcode-3--longest-substring-without-repeating-characters/</guid><description>&lt;p>&lt;a href="https://leetcode.com/problems/longest-substring-without-repeating-characters">https://leetcode.com/problems/longest-substring-without-repeating-characters&lt;/a>&lt;/p>
&lt;h2 id="solution">Solution&lt;/h2>
&lt;p>使用 sliding window + set 就能解決這個問題，只是一開始被前幾天解的 dp 題 (找「最長回文子字串 longest palandromic substring」) 擾亂思緒，往列舉出所有長度的子字串，再一個個的檢查是否 valid 的方向思考。&lt;/p></description></item><item><title>Leetcode 4 — Median of Two Sorted Arrays</title><link>https://flyotlin.github.io/posts/leetcode-4--median-of-two-sorted-arrays/</link><pubDate>Fri, 14 Feb 2025 16:25:17 +0800</pubDate><guid>https://flyotlin.github.io/posts/leetcode-4--median-of-two-sorted-arrays/</guid><description>&lt;p>&lt;a href="https://leetcode.com/problems/median-of-two-sorted-arrays">https://leetcode.com/problems/median-of-two-sorted-arrays&lt;/a>&lt;/p>
&lt;h2 id="solution">Solution&lt;/h2>
&lt;p>這題給你兩個 sorted array，請你找出這兩個 array 合併後的中位數。&lt;/p>
&lt;h3 id="brute-force">Brute force&lt;/h3>
&lt;p>測資的限制其實挺寬鬆的，雖然要求 O(log(m+n)) 的時間複雜度，但就算用 O(m+n) 的解法也是能 AC。&lt;/p>
&lt;p>brute force 就單純的直接 merge 兩個 array，再直接計算 median 回傳。&lt;/p></description></item><item><title>Leetcode 5 — Longest Palindromic Substring</title><link>https://flyotlin.github.io/posts/leetcode-5--longest-palindromic-substring/</link><pubDate>Fri, 14 Feb 2025 16:25:03 +0800</pubDate><guid>https://flyotlin.github.io/posts/leetcode-5--longest-palindromic-substring/</guid><description>&lt;p>前陣子在忙些雜事，刷題就荒廢了一陣子。途中還跑去學 Rust，之後可能會把 Rust book 重要的內容也整理一下，打成一篇筆記。&lt;/p>
&lt;p>&lt;a href="https://leetcode.com/problems/longest-palindromic-substring/">https://leetcode.com/problems/longest-palindromic-substring/&lt;/a>&lt;/p>
&lt;p>這題算標準的 Longest Palindromic Substring (最長回文子字串)，但很久沒寫這類題目，因此花了滿久卡在思考流程與邊界條件。&lt;/p></description></item><item><title>Leetcode 225 — Implement Stack Using Queues</title><link>https://flyotlin.github.io/posts/leetcode-225--implement-stack-using-queues/</link><pubDate>Fri, 14 Feb 2025 16:24:35 +0800</pubDate><guid>https://flyotlin.github.io/posts/leetcode-225--implement-stack-using-queues/</guid><description>&lt;p>接續昨天的選題，今天挑了一個 queue 相關的題目。&lt;/p>
&lt;p>&lt;a href="https://leetcode.com/problems/implement-stack-using-queues">https://leetcode.com/problems/implement-stack-using-queues&lt;/a>&lt;/p>
&lt;h2 id="solution">Solution&lt;/h2>
&lt;p>題目的要求是使用兩個 queue (q1、q2) 來模擬 stack FILO 的行為。用紙筆簡單畫了一下，有了一點想法。&lt;/p>
&lt;p>主要的想法是，在 stack pop 前，push() 就只塞到其中一個 queue 裡面。&lt;/p></description></item><item><title>Leetcode 20 — Valid Parentheses</title><link>https://flyotlin.github.io/posts/leetcode-20--valid-parentheses/</link><pubDate>Fri, 14 Feb 2025 16:24:13 +0800</pubDate><guid>https://flyotlin.github.io/posts/leetcode-20--valid-parentheses/</guid><description>&lt;p>這幾天會找一些 stack、queue 的題目練習，主要圍繞在 C++ 的語法複習，以及基礎資料結構的熟悉。&lt;/p>
&lt;p>&lt;a href="https://leetcode.com/problems/valid-parentheses">https://leetcode.com/problems/valid-parentheses&lt;/a>&lt;/p>
&lt;h2 id="solution">Solution&lt;/h2>
&lt;p>標準的可以利用 stack FILO 特性的題目。&lt;/p>
&lt;p>解法就是單純的依序讀取字串，遇到的左括號放進 stack 中，遇到右括號就開始比對 stack top。&lt;/p></description></item><item><title>Leetcode 23 — Merge K Sorted Lists</title><link>https://flyotlin.github.io/posts/leetcode-23--merge-k-sorted-lists/</link><pubDate>Fri, 14 Feb 2025 16:17:45 +0800</pubDate><guid>https://flyotlin.github.io/posts/leetcode-23--merge-k-sorted-lists/</guid><description>&lt;p>接續前一天的策略，隨手從 Leetcode Linked List 題組中挑了一個 Hard 的題目。&lt;/p>
&lt;p>之前做過 Merge two Sorted Lists，這題算是那一題的變形、Follow-up。&lt;/p>
&lt;p>&lt;a href="https://leetcode.com/problems/merge-k-sorted-lists">https://leetcode.com/problems/merge-k-sorted-lists&lt;/a>&lt;/p>
&lt;h2 id="solution">Solution&lt;/h2>
&lt;p>看完題目後，偷瞄了一下 Topics 發現跟 heap、priority queue 有關。當下還沒仔細思考複雜度，但腦中瞬間有了一個解法。&lt;/p></description></item><item><title>Leetcode 11 — Container With Most Water</title><link>https://flyotlin.github.io/posts/leetcode-11--container-with-most-water/</link><pubDate>Fri, 14 Feb 2025 16:07:01 +0800</pubDate><guid>https://flyotlin.github.io/posts/leetcode-11--container-with-most-water/</guid><description>&lt;p>最近開始刷題，先從基本的 data structure 開始複習。策略是主題式的複習，這幾天的目標是 array、linked list 之類的資料結構，因此從 leetcode array 類別中選到了這一題。&lt;/p></description></item></channel></rss>